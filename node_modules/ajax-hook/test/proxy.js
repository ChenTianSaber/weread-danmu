"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.testProxy = void 0;
var index_1 = require("../index");
var test_1 = require("./test");
function testProxy() {
    (0, test_1.testRequest)('https://cc/');
}
exports.testProxy = testProxy;
var _a = (0, index_1.proxy)({
    onRequest: function (config, handler) {
        console.log("1. onRequest: ".concat(config.url));
        config.headers = __assign({ 'content-type': 'text/text', customHeader1: 'customHeader1' }, config.headers);
        handler.next(config);
    },
    onError: function (err, handler) {
        console.log("1. onError: ".concat(err.config.url));
        handler.next(err);
    },
    onResponse: function (response, handler) {
        console.log("1. onResponse: ".concat(response.config.url));
        handler.next(response);
    }
}, window), unProxy1 = _a.unProxy, originXhr1 = _a.originXhr;
var _b = (0, index_1.proxy)({
    onRequest: function (config, handler) {
        console.log("2. onRequest: ".concat(config.url));
        config.headers = __assign({ 'content-type': 'text/text', customHeader2: 'customHeader2' }, config.headers);
        handler.next(config);
    },
    onError: function (err, handler) {
        console.log("2. onError: ".concat(err.config.url));
        handler.next(err);
    },
    onResponse: function (response, handler) {
        console.log("2. onResponse: ".concat(response.config.url));
        handler.next(response);
    }
}, window), unProxy2 = _b.unProxy, originXhr2 = _b.originXhr;
unProxy2();
// unProxy1();
testProxy();
